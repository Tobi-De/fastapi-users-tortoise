name: Build

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: fastapiusers
          POSTGRES_PASSWORD: fastapiuserspassword
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      mariadb:
        image: mariadb
        ports:
          - 3306:3306
        env:
          MARIADB_ROOT_PASSWORD: fastapiuserspassword
          MARIADB_DATABASE: fastapiusers
          MARIADB_USER: fastapiusers
          MARIADB_PASSWORD: fastapiuserspassword

    strategy:
      fail-fast: false
      matrix:
        python_version: [3.7, 3.8, 3.9, "3.10"]
        database_url:
          [
            "sqlite+aiosqlite:///./test-fastapiusers.db",
            "postgresql+asyncpg://fastapiusers:fastapiuserspassword@localhost:5432/fastapiusers",
            "mysql+aiomysql://root:fastapiuserspassword@localhost:3306/fastapiusers",
          ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python_version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.dev.txt
      - name: Test with pytest
        env:
          DATABASE_URL: ${{ matrix.database_url }}
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: |
          pytest --cov=fastapi_users_db_sqlalchemy/
          codecov
      - name: Build and install it on system host
        run: |
          git status
          flit build
          flit install --python $(which python)
          python test_build.py
